---
name: Build Release

on:
  pull_request:
    types: [closed]
    branches: [main]
    paths: ['projects/ontimize-web-ngx-report/**']
  workflow_dispatch:
    inputs:
      BASELINE:
        description: 'Release branch'
        required: true
        default: 'main'
      RELEASE_LABELS:
        description: 'Release type (comma separated list)'
        required: true
        default: 'release-type/current'

env:
  NPM_REGISTRY: https://registry.npmjs.com

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true && contains(join(github.event.pull_request.labels.*.name, ', '), 'release-type'))

    steps:
      - name: Get input parameters
        run: |
          echo "RELEASE_LABELS=${{ github.event.inputs.RELEASE_LABELS || join(github.event.pull_request.labels.*.name, ', ') }}" >> $GITHUB_ENV
          echo "BASELINE_BRANCH=${{ github.event.inputs.BASELINE || github.ref }}" >> $GITHUB_ENV

      - name: Checkout merge commit
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BASELINE_BRANCH }}
          fetch-depth: 0
          persist-credentials: false

      - name: 'Cache node modules'
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.13.0

      - name: obtain package.json version
        id: project
        run: |
          echo ::set-output name=version::$(node -pe "require('./package.json')['version']")
      
      - name: abort if SNAPSHOT
        if: "contains(steps.project.outputs.version, 'SNAPSHOT')"
        run: |
          echo "Version ${{ steps.project.outputs.version }} is not a properly named for RELEASE"
          exit 1
          
      - name: npm install and npm run build
        run: |
          npm i
          npm run build
          
      - name: Publish
        run: |
          cd dist
          npm set registry=${{ env.NPM_REGISTRY }}
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.OWEB_NPM_AUTOMATION_TOKEN }}
          
      - name: GitHub Release / Create release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.OWEB_GH_TOKEN_PUSH }}
        with:
          tag_name: ${{ steps.project.outputs.version }}
          release_name: ${{ steps.project.outputs.version }}
          body: |
            Check out the [changelog](CHANGELOG.md) for version ${{ steps.project.outputs.version }}
